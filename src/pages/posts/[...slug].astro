---
import { render } from 'astro:content'
import { format } from '@/utils/date'
import { getPosts } from '@/content'

import Layout from '@/layouts/Layout.astro'
import PageTitle from '@/components/PageTitle.astro'
import Tag from '@/components/Tag.astro'
import DraftTag from '@/components/DraftTag.astro'
import Link from '@/components/Link.astro'

import type { GetStaticPaths, InferGetStaticPropsType } from 'astro'

export const getStaticPaths = (async () => {
  const posts = await getPosts()
  const length = posts.length
  
  return posts.map((post, index) => {
    const next = index > 0 ? posts[index - 1] : null
    const previous = index < length - 1 ? posts[index + 1] : null

    return {
      params: { slug: post.id },
      props: { post, next, previous },
    }
  })
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { post, next, previous } = Astro.props
const { Content } = await render(post)

/** Format word count to comma separated number, rounded to the nearest hundred */
function formatWordCount(count: number): string {
  const rounded = Math.round(count / 100) * 100
  return rounded.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
}
---

<Layout title={post.data.title}>
  <!-- Title -->
  <PageTitle>
    <Fragment>{post.data.title}</Fragment>
    <span slot="subtitle" class="flex flex-wrap gap-2">
      <div>
        <span>{format(post.data.created, 'PP')}</span>
      </div>
      {post.data.tags?.map((tag) => (
        <Tag href={`/posts/tags/${tag}`}>{tag}</Tag>
      ))}
      {post.data.draft && <DraftTag />}
    </span>
  </PageTitle>
  
  <!-- Content -->
  <Content />

  <!-- Links to next and previous posts -->
  {(next || previous) && (
    <div class="mt-16 grid grid-cols-2">
      {next && (
        <div class:list={['col-start-1 pr-4 text-slate-500', !previous && 'border-r border-slate-200']}>
          <div class="text-sm">
            <span>下一篇</span><span class="i-lucide-dot" /><span>{format(next.data.created, 'PP')}</span>
          </div>
          <Link href={`/posts/${next.id}`} class="block mt-1">
            {next.data.title}
          </Link>
        </div>
      )}
      {previous && (
        <div class="col-start-2 pl-4 border-l border-slate-200 text-slate-500 text-right">
          <div class="text-sm">
            <span>{format(previous.data.created, 'PP')}</span><span class="i-lucide-dot" /><span>上一篇</span>
          </div>
          <Link href={`/posts/${previous.id}`} class="block mt-1">
            {previous.data.title}
          </Link>
        </div>
      )}
    </div>
  )}
</Layout>

<script is:inline type="module">
import mediumZoom from 'https://cdn.jsdelivr.net/npm/medium-zoom@1.1.0/+esm'
mediumZoom('main img', { background: '#fffd' })
</script>
